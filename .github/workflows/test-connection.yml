name: Test SSH Connection

on:
  workflow_dispatch:

jobs:
  test-connection:
    runs-on: ubuntu-latest
    steps:
      - name: Debug SSH key
        run: |
          echo "=== SSH Key Debug ==="
          echo "Key length: $(echo "${{ secrets.SSH_PRIVATE_KEY }}" | wc -l) lines"
          echo "First line: $(echo "${{ secrets.SSH_PRIVATE_KEY }}" | head -n 1)"
          echo "Last line: $(echo "${{ secrets.SSH_PRIVATE_KEY }}" | tail -n 1)"
          echo "=== End SSH Key Debug ==="

      - name: Setup WireGuard VPN
        run: |
          echo "=== Setting up WireGuard VPN ==="
          # Install WireGuard
          sudo apt-get update
          sudo apt-get install -y wireguard

          # Create WireGuard config
          sudo mkdir -p /etc/wireguard
          echo "${{ secrets.WIREGUARD_CONFIG }}" | sudo tee /etc/wireguard/wg0.conf > /dev/null
          sudo chmod 600 /etc/wireguard/wg0.conf

          # Start WireGuard
          sudo wg-quick up wg0

          # Wait for connection
          sleep 5

          # Show connection status
          sudo wg show
          echo "=== VPN Setup Complete ==="

      - name: Setup SSH
        uses: webfactory/ssh-agent@v0.8.0
        with:
          ssh-private-key: |
            ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Add known hosts
        run: |
          mkdir -p ~/.ssh
          chmod 700 ~/.ssh
          ssh-keyscan -H ${{ secrets.SSH_HOST }} >> ~/.ssh/known_hosts
          chmod 644 ~/.ssh/known_hosts
          echo "=== Known Hosts ==="
          cat ~/.ssh/known_hosts
          echo "=== End Known Hosts ==="

      - name: Test connection
        run: |
          echo "=== SSH Agent Status ==="
          ssh-add -l
          echo "=== End SSH Agent Status ==="

          echo "=== SSH Connection Test ==="
          ssh -v -o StrictHostKeyChecking=no ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} "echo 'Connection successful'"
          if [ $? -ne 0 ]; then
            echo "=== SSH Environment ==="
            echo "SSH_AUTH_SOCK: $SSH_AUTH_SOCK"
            echo "SSH_AGENT_PID: $SSH_AGENT_PID"
            echo "=== End SSH Environment ==="
            exit 1
          fi

      - name: Cleanup VPN
        if: always()
        run: |
          echo "=== Cleaning up VPN ==="
          sudo wg-quick down wg0
          echo "=== VPN Cleanup Complete ==="
